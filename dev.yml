version: "3"

services:
  grafana:
    image: grafana/grafana:latest
    ports:
      - 4000:4000
    volumes:
      - ./grafana:/var/lib/grafana
  mongo:
    image: mongo
    restart: always
    container_name: mongodb
    volumes:
      - ./mongo:/data/db
  graphql:
    build:
      context: ./backend
      dockerfile: dev.dockerfile
    container_name: graphql
    environment:
      CHOKIDAR_USEPOLLING: "true"
    restart: unless-stopped
    ports:
      - 8443:8443
    env_file:
      - .env
  portfolio:
    build:
      context: ./frontend/frontpage
      dockerfile: dev.dockerfile
    container_name: portfolio
    environment:
      CHOKIDAR_USEPOLLING: "true"
    restart: unless-stopped
    ports:
      - "80:3000"
    volumes:
      - /app/node_modules
      - ./frontend/frontpage:/home/app/portfolio
    env_file:
      - .env
    depends_on:
      - graphql
  admin:
    build:
      context: ./frontend/admin-panel
      dockerfile: dev.dockerfile
    container_name: admin
    environment:
      CHOKIDAR_USEPOLLING: "true"
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - /app/node_modules
      - ./frontend/admin-panel:/home/app/admin-tool
    env_file:
      - .env
    depends_on:
      - graphql
  # mysql:
  #   image: arm64v8/mysql:oracle
  #   restart: unless-stopped
  #   container_name: mysql
  #   ports:
  #     - "3306:3306"
  #   env_file:
  #     - .env
  # super_tokens:
  #   image: registry.supertokens.io/supertokens/supertokens-mysql
  #   restart: always
  #   container_name: super_tokens
  #   env_file:
  #     - .env
  #   ports:
  #     - "3567:3567"
  #   depends_on: 
  #     - "mysql"
  zinc:
    image: public.ecr.aws/h9e2j3o7/zinc:latest
    volumes:
      - ./zinc:/data
    ports:
      - "4080:4080"
    env_file:
      - .env
  # configure:
  #   image: quay.io/gravitational/teleport:8
  #   container_name: teleport-configure
  #   entrypoint: /bin/sh
  #   hostname: teleport.abrahannevarez.dev
  #   command: -c "if [ ! -f /etc/teleport/teleport.yaml ]; then teleport configure > /etc/teleport/teleport.yaml; fi"
  #   volumes:
  #     - ./teleport-config:/etc/teleport

  # teleport:
  #   image: quay.io/gravitational/teleport:8
  #   container_name: teleport
  #   entrypoint: /bin/sh
  #   hostname: teleport.abrahannevarez.dev
  #   command: -c "sleep 1 && /bin/dumb-init teleport start -c /etc/teleport/teleport.yaml"
  #   ports:
  #     - "3023:3023"
  #     - "3024:3024"
  #     - "3025:3025"
  #     - "3080:3080"
  #   volumes:
  #     - ./teleport-config:/etc/teleport
  #     - ./teleport-data:/var/lib/teleport
  #   depends_on:
  #     - configure
volumes:
  mongo_storage:
